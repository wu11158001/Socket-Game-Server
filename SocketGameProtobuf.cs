// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SocketGameProtobuf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SocketGameProtobuf {

  /// <summary>Holder for reflection information generated from SocketGameProtobuf.proto</summary>
  public static partial class SocketGameProtobufReflection {

    #region Descriptor
    /// <summary>File descriptor for SocketGameProtobuf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SocketGameProtobufReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhTb2NrZXRHYW1lUHJvdG9idWYucHJvdG8SElNvY2tldEdhbWVQcm90b2J1",
            "ZiLLAgoITWFpblBhY2sSNAoLcmVxdWVzdENvZGUYASABKA4yHy5Tb2NrZXRH",
            "YW1lUHJvdG9idWYuUmVxdWVzdENvZGUSMgoKYWN0aW9uQ29kZRgCIAEoDjIe",
            "LlNvY2tldEdhbWVQcm90b2J1Zi5BY3Rpb25Db2RlEjIKCnJldHVybkNvZGUY",
            "AyABKA4yHi5Tb2NrZXRHYW1lUHJvdG9idWYuUmV0dXJuQ29kZRILCgNzdHIY",
            "BCABKAkSMAoJbG9naW5QYWNrGAUgASgLMh0uU29ja2V0R2FtZVByb3RvYnVm",
            "LkxvZ2luUGFjaxIuCghyb29tUGFjaxgGIAMoCzIcLlNvY2tldEdhbWVQcm90",
            "b2J1Zi5Sb29tUGFjaxIyCgpwbGF5ZXJQYWNrGAcgAygLMh4uU29ja2V0R2Ft",
            "ZVByb3RvYnVmLlBsYXllclBhY2siLwoJTG9naW5QYWNrEhAKCHVzZXJOYW1l",
            "GAEgASgJEhAKCHBhc3N3b3JkGAIgASgJIlAKCFJvb21QYWNrEhAKCHJvb21O",
            "YW1lGAEgASgJEhAKCG1heENvdW50GAIgASgFEhEKCUN1cnJDb3VudBgDIAEo",
            "BRINCgVTdGF0ZRgEIAEoBSKHAgoKUGxheWVyUGFjaxISCgpwbGF5ZXJOYW1l",
            "GAEgASgJEgoKAkhQGAIgASgFEhEKCXRvdGFsS2lsbBgDIAEoBRIsCgdwb3NQ",
            "YWNrGAQgASgLMhsuU29ja2V0R2FtZVByb3RvYnVmLlBvc1BhY2sSLAoHYW5p",
            "UGFjaxgFIAEoCzIbLlNvY2tldEdhbWVQcm90b2J1Zi5BbmlQYWNrEjIKCmF0",
            "dGFja1BhY2sYBiABKAsyHi5Tb2NrZXRHYW1lUHJvdG9idWYuQXR0YWNrUGFj",
            "axI2CgxraWxsSW5mb1BhY2sYByABKAsyIC5Tb2NrZXRHYW1lUHJvdG9idWYu",
            "S2lsbEluZm9QYWNrIiUKB1Bvc1BhY2sSDAoEcG9zWBgBIAEoAhIMCgRwb3NZ",
            "GAIgASgCIkUKB0FuaVBhY2sSFQoNYW5pbWF0aW9uTmFtZRgBIAEoCRIQCghJ",
            "c0FjdGl2ZRgCIAEoCBIRCglkaXJlY3Rpb24YAyABKAgiIQoKQXR0YWNrUGFj",
            "axITCgthdHRhY2tOYW1lcxgBIAMoCSIyCgxLaWxsSW5mb1BhY2sSEAoIYXR0",
            "YWNrZXIYASABKAkSEAoIZGVhZExpc3QYAiADKAkqPAoLUmVxdWVzdENvZGUS",
            "DwoLUmVxdWVzdE5vbmUQABIICgRVc2VyEAESCAoEUm9vbRACEggKBEdhbWUQ",
            "AyqpAgoKQWN0aW9uQ29kZRIOCgpBY3Rpb25Ob25lEAASCQoFTG9nb24QARIJ",
            "CgVMb2dpbhACEgoKBkxvZ291dBADEg4KCkNyZWF0ZVJvb20QBBIOCgpTZWFy",
            "Y2hSb29tEAUSDgoKUGxheWVyTGlzdBAGEgwKCEpvaW5Sb29tEAcSCAoERXhp",
            "dBAIEggKBENoYXQQCRINCglTdGFydEdhbWUQChITCg9TZXJ2ZXJTdGFydEdh",
            "bWUQCxIMCghFeGl0R2FtZRAMEhcKE1VwZGF0ZUNoYXJhY3Rlckxpc3QQDRIN",
            "CglVcGRhdGVQb3MQDhINCglVcGRhdGVBbmkQDxIQCgxQbGF5ZXJBdHRhY2sQ",
            "EBIOCgpHYW1lUmVzdWx0EBESDAoIS2lsbEluZm8QEipPCgpSZXR1cm5Db2Rl",
            "Eg4KClJldHVybk5vbmUQABILCgdTdWNjZWVkEAESCAoERmFpbBACEg0KCUR1",
            "cGxpY2F0ZRADEgsKB05vdFJvb20QBGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SocketGameProtobuf.RequestCode), typeof(global::SocketGameProtobuf.ActionCode), typeof(global::SocketGameProtobuf.ReturnCode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtobuf.MainPack), global::SocketGameProtobuf.MainPack.Parser, new[]{ "RequestCode", "ActionCode", "ReturnCode", "Str", "LoginPack", "RoomPack", "PlayerPack" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtobuf.LoginPack), global::SocketGameProtobuf.LoginPack.Parser, new[]{ "UserName", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtobuf.RoomPack), global::SocketGameProtobuf.RoomPack.Parser, new[]{ "RoomName", "MaxCount", "CurrCount", "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtobuf.PlayerPack), global::SocketGameProtobuf.PlayerPack.Parser, new[]{ "PlayerName", "HP", "TotalKill", "PosPack", "AniPack", "AttackPack", "KillInfoPack" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtobuf.PosPack), global::SocketGameProtobuf.PosPack.Parser, new[]{ "PosX", "PosY" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtobuf.AniPack), global::SocketGameProtobuf.AniPack.Parser, new[]{ "AnimationName", "IsActive", "Direction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtobuf.AttackPack), global::SocketGameProtobuf.AttackPack.Parser, new[]{ "AttackNames" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SocketGameProtobuf.KillInfoPack), global::SocketGameProtobuf.KillInfoPack.Parser, new[]{ "Attacker", "DeadList" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum RequestCode {
    [pbr::OriginalName("RequestNone")] RequestNone = 0,
    /// <summary>
    ///用戶
    /// </summary>
    [pbr::OriginalName("User")] User = 1,
    /// <summary>
    ///房間
    /// </summary>
    [pbr::OriginalName("Room")] Room = 2,
    /// <summary>
    ///遊戲
    /// </summary>
    [pbr::OriginalName("Game")] Game = 3,
  }

  /// <summary>
  ///執行方法名稱
  /// </summary>
  public enum ActionCode {
    [pbr::OriginalName("ActionNone")] ActionNone = 0,
    /// <summary>
    ///註冊
    /// </summary>
    [pbr::OriginalName("Logon")] Logon = 1,
    /// <summary>
    ///登入
    /// </summary>
    [pbr::OriginalName("Login")] Login = 2,
    /// <summary>
    ///登出
    /// </summary>
    [pbr::OriginalName("Logout")] Logout = 3,
    /// <summary>
    ///創建房間
    /// </summary>
    [pbr::OriginalName("CreateRoom")] CreateRoom = 4,
    /// <summary>
    ///查詢房間
    /// </summary>
    [pbr::OriginalName("SearchRoom")] SearchRoom = 5,
    /// <summary>
    ///房間玩家列表
    /// </summary>
    [pbr::OriginalName("PlayerList")] PlayerList = 6,
    /// <summary>
    ///加入房間
    /// </summary>
    [pbr::OriginalName("JoinRoom")] JoinRoom = 7,
    /// <summary>
    ///離開(房間/遊戲)
    /// </summary>
    [pbr::OriginalName("Exit")] Exit = 8,
    /// <summary>
    ///聊天
    /// </summary>
    [pbr::OriginalName("Chat")] Chat = 9,
    /// <summary>
    ///開始遊戲
    /// </summary>
    [pbr::OriginalName("StartGame")] StartGame = 10,
    /// <summary>
    ///服務端發送的開始遊戲指令
    /// </summary>
    [pbr::OriginalName("ServerStartGame")] ServerStartGame = 11,
    /// <summary>
    ///離開遊戲
    /// </summary>
    [pbr::OriginalName("ExitGame")] ExitGame = 12,
    /// <summary>
    ///更新遊戲角色列表
    /// </summary>
    [pbr::OriginalName("UpdateCharacterList")] UpdateCharacterList = 13,
    /// <summary>
    ///更新位置
    /// </summary>
    [pbr::OriginalName("UpdatePos")] UpdatePos = 14,
    /// <summary>
    ///更新動畫
    /// </summary>
    [pbr::OriginalName("UpdateAni")] UpdateAni = 15,
    /// <summary>
    ///玩家攻擊
    /// </summary>
    [pbr::OriginalName("PlayerAttack")] PlayerAttack = 16,
    /// <summary>
    ///遊戲結果
    /// </summary>
    [pbr::OriginalName("GameResult")] GameResult = 17,
    /// <summary>
    ///擊殺訊息
    /// </summary>
    [pbr::OriginalName("KillInfo")] KillInfo = 18,
  }

  public enum ReturnCode {
    [pbr::OriginalName("ReturnNone")] ReturnNone = 0,
    /// <summary>
    ///成功
    /// </summary>
    [pbr::OriginalName("Succeed")] Succeed = 1,
    /// <summary>
    ///失敗
    /// </summary>
    [pbr::OriginalName("Fail")] Fail = 2,
    /// <summary>
    ///重複登入
    /// </summary>
    [pbr::OriginalName("Duplicate")] Duplicate = 3,
    /// <summary>
    ///房間不存在
    /// </summary>
    [pbr::OriginalName("NotRoom")] NotRoom = 4,
  }

  #endregion

  #region Messages
  public sealed partial class MainPack : pb::IMessage<MainPack> {
    private static readonly pb::MessageParser<MainPack> _parser = new pb::MessageParser<MainPack>(() => new MainPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MainPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtobuf.SocketGameProtobufReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack(MainPack other) : this() {
      requestCode_ = other.requestCode_;
      actionCode_ = other.actionCode_;
      returnCode_ = other.returnCode_;
      str_ = other.str_;
      loginPack_ = other.loginPack_ != null ? other.loginPack_.Clone() : null;
      roomPack_ = other.roomPack_.Clone();
      playerPack_ = other.playerPack_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MainPack Clone() {
      return new MainPack(this);
    }

    /// <summary>Field number for the "requestCode" field.</summary>
    public const int RequestCodeFieldNumber = 1;
    private global::SocketGameProtobuf.RequestCode requestCode_ = global::SocketGameProtobuf.RequestCode.RequestNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtobuf.RequestCode RequestCode {
      get { return requestCode_; }
      set {
        requestCode_ = value;
      }
    }

    /// <summary>Field number for the "actionCode" field.</summary>
    public const int ActionCodeFieldNumber = 2;
    private global::SocketGameProtobuf.ActionCode actionCode_ = global::SocketGameProtobuf.ActionCode.ActionNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtobuf.ActionCode ActionCode {
      get { return actionCode_; }
      set {
        actionCode_ = value;
      }
    }

    /// <summary>Field number for the "returnCode" field.</summary>
    public const int ReturnCodeFieldNumber = 3;
    private global::SocketGameProtobuf.ReturnCode returnCode_ = global::SocketGameProtobuf.ReturnCode.ReturnNone;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtobuf.ReturnCode ReturnCode {
      get { return returnCode_; }
      set {
        returnCode_ = value;
      }
    }

    /// <summary>Field number for the "str" field.</summary>
    public const int StrFieldNumber = 4;
    private string str_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Str {
      get { return str_; }
      set {
        str_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "loginPack" field.</summary>
    public const int LoginPackFieldNumber = 5;
    private global::SocketGameProtobuf.LoginPack loginPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtobuf.LoginPack LoginPack {
      get { return loginPack_; }
      set {
        loginPack_ = value;
      }
    }

    /// <summary>Field number for the "roomPack" field.</summary>
    public const int RoomPackFieldNumber = 6;
    private static readonly pb::FieldCodec<global::SocketGameProtobuf.RoomPack> _repeated_roomPack_codec
        = pb::FieldCodec.ForMessage(50, global::SocketGameProtobuf.RoomPack.Parser);
    private readonly pbc::RepeatedField<global::SocketGameProtobuf.RoomPack> roomPack_ = new pbc::RepeatedField<global::SocketGameProtobuf.RoomPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SocketGameProtobuf.RoomPack> RoomPack {
      get { return roomPack_; }
    }

    /// <summary>Field number for the "playerPack" field.</summary>
    public const int PlayerPackFieldNumber = 7;
    private static readonly pb::FieldCodec<global::SocketGameProtobuf.PlayerPack> _repeated_playerPack_codec
        = pb::FieldCodec.ForMessage(58, global::SocketGameProtobuf.PlayerPack.Parser);
    private readonly pbc::RepeatedField<global::SocketGameProtobuf.PlayerPack> playerPack_ = new pbc::RepeatedField<global::SocketGameProtobuf.PlayerPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SocketGameProtobuf.PlayerPack> PlayerPack {
      get { return playerPack_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MainPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MainPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestCode != other.RequestCode) return false;
      if (ActionCode != other.ActionCode) return false;
      if (ReturnCode != other.ReturnCode) return false;
      if (Str != other.Str) return false;
      if (!object.Equals(LoginPack, other.LoginPack)) return false;
      if(!roomPack_.Equals(other.roomPack_)) return false;
      if(!playerPack_.Equals(other.playerPack_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestCode != global::SocketGameProtobuf.RequestCode.RequestNone) hash ^= RequestCode.GetHashCode();
      if (ActionCode != global::SocketGameProtobuf.ActionCode.ActionNone) hash ^= ActionCode.GetHashCode();
      if (ReturnCode != global::SocketGameProtobuf.ReturnCode.ReturnNone) hash ^= ReturnCode.GetHashCode();
      if (Str.Length != 0) hash ^= Str.GetHashCode();
      if (loginPack_ != null) hash ^= LoginPack.GetHashCode();
      hash ^= roomPack_.GetHashCode();
      hash ^= playerPack_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestCode != global::SocketGameProtobuf.RequestCode.RequestNone) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RequestCode);
      }
      if (ActionCode != global::SocketGameProtobuf.ActionCode.ActionNone) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ActionCode);
      }
      if (ReturnCode != global::SocketGameProtobuf.ReturnCode.ReturnNone) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ReturnCode);
      }
      if (Str.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Str);
      }
      if (loginPack_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LoginPack);
      }
      roomPack_.WriteTo(output, _repeated_roomPack_codec);
      playerPack_.WriteTo(output, _repeated_playerPack_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestCode != global::SocketGameProtobuf.RequestCode.RequestNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RequestCode);
      }
      if (ActionCode != global::SocketGameProtobuf.ActionCode.ActionNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ActionCode);
      }
      if (ReturnCode != global::SocketGameProtobuf.ReturnCode.ReturnNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReturnCode);
      }
      if (Str.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Str);
      }
      if (loginPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoginPack);
      }
      size += roomPack_.CalculateSize(_repeated_roomPack_codec);
      size += playerPack_.CalculateSize(_repeated_playerPack_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MainPack other) {
      if (other == null) {
        return;
      }
      if (other.RequestCode != global::SocketGameProtobuf.RequestCode.RequestNone) {
        RequestCode = other.RequestCode;
      }
      if (other.ActionCode != global::SocketGameProtobuf.ActionCode.ActionNone) {
        ActionCode = other.ActionCode;
      }
      if (other.ReturnCode != global::SocketGameProtobuf.ReturnCode.ReturnNone) {
        ReturnCode = other.ReturnCode;
      }
      if (other.Str.Length != 0) {
        Str = other.Str;
      }
      if (other.loginPack_ != null) {
        if (loginPack_ == null) {
          LoginPack = new global::SocketGameProtobuf.LoginPack();
        }
        LoginPack.MergeFrom(other.LoginPack);
      }
      roomPack_.Add(other.roomPack_);
      playerPack_.Add(other.playerPack_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestCode = (global::SocketGameProtobuf.RequestCode) input.ReadEnum();
            break;
          }
          case 16: {
            ActionCode = (global::SocketGameProtobuf.ActionCode) input.ReadEnum();
            break;
          }
          case 24: {
            ReturnCode = (global::SocketGameProtobuf.ReturnCode) input.ReadEnum();
            break;
          }
          case 34: {
            Str = input.ReadString();
            break;
          }
          case 42: {
            if (loginPack_ == null) {
              LoginPack = new global::SocketGameProtobuf.LoginPack();
            }
            input.ReadMessage(LoginPack);
            break;
          }
          case 50: {
            roomPack_.AddEntriesFrom(input, _repeated_roomPack_codec);
            break;
          }
          case 58: {
            playerPack_.AddEntriesFrom(input, _repeated_playerPack_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///註冊/登入包
  /// </summary>
  public sealed partial class LoginPack : pb::IMessage<LoginPack> {
    private static readonly pb::MessageParser<LoginPack> _parser = new pb::MessageParser<LoginPack>(() => new LoginPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtobuf.SocketGameProtobufReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPack(LoginPack other) : this() {
      userName_ = other.userName_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginPack Clone() {
      return new LoginPack(this);
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    /// <summary>
    ///用戶名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    /// <summary>
    ///密碼
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginPack other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///房間包
  /// </summary>
  public sealed partial class RoomPack : pb::IMessage<RoomPack> {
    private static readonly pb::MessageParser<RoomPack> _parser = new pb::MessageParser<RoomPack>(() => new RoomPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtobuf.SocketGameProtobufReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack(RoomPack other) : this() {
      roomName_ = other.roomName_;
      maxCount_ = other.maxCount_;
      currCount_ = other.currCount_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomPack Clone() {
      return new RoomPack(this);
    }

    /// <summary>Field number for the "roomName" field.</summary>
    public const int RoomNameFieldNumber = 1;
    private string roomName_ = "";
    /// <summary>
    ///房間名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomName {
      get { return roomName_; }
      set {
        roomName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maxCount" field.</summary>
    public const int MaxCountFieldNumber = 2;
    private int maxCount_;
    /// <summary>
    ///房間最大人數
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxCount {
      get { return maxCount_; }
      set {
        maxCount_ = value;
      }
    }

    /// <summary>Field number for the "CurrCount" field.</summary>
    public const int CurrCountFieldNumber = 3;
    private int currCount_;
    /// <summary>
    ///房間當前人數
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrCount {
      get { return currCount_; }
      set {
        currCount_ = value;
      }
    }

    /// <summary>Field number for the "State" field.</summary>
    public const int StateFieldNumber = 4;
    private int state_;
    /// <summary>
    ///房間狀態(0=等待加入,1=房間已滿,2=遊戲中)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomName != other.RoomName) return false;
      if (MaxCount != other.MaxCount) return false;
      if (CurrCount != other.CurrCount) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomName.Length != 0) hash ^= RoomName.GetHashCode();
      if (MaxCount != 0) hash ^= MaxCount.GetHashCode();
      if (CurrCount != 0) hash ^= CurrCount.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoomName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoomName);
      }
      if (MaxCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxCount);
      }
      if (CurrCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurrCount);
      }
      if (State != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomName);
      }
      if (MaxCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxCount);
      }
      if (CurrCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrCount);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomPack other) {
      if (other == null) {
        return;
      }
      if (other.RoomName.Length != 0) {
        RoomName = other.RoomName;
      }
      if (other.MaxCount != 0) {
        MaxCount = other.MaxCount;
      }
      if (other.CurrCount != 0) {
        CurrCount = other.CurrCount;
      }
      if (other.State != 0) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoomName = input.ReadString();
            break;
          }
          case 16: {
            MaxCount = input.ReadInt32();
            break;
          }
          case 24: {
            CurrCount = input.ReadInt32();
            break;
          }
          case 32: {
            State = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///房間玩家訊息包
  /// </summary>
  public sealed partial class PlayerPack : pb::IMessage<PlayerPack> {
    private static readonly pb::MessageParser<PlayerPack> _parser = new pb::MessageParser<PlayerPack>(() => new PlayerPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtobuf.SocketGameProtobufReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPack(PlayerPack other) : this() {
      playerName_ = other.playerName_;
      hP_ = other.hP_;
      totalKill_ = other.totalKill_;
      posPack_ = other.posPack_ != null ? other.posPack_.Clone() : null;
      aniPack_ = other.aniPack_ != null ? other.aniPack_.Clone() : null;
      attackPack_ = other.attackPack_ != null ? other.attackPack_.Clone() : null;
      killInfoPack_ = other.killInfoPack_ != null ? other.killInfoPack_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPack Clone() {
      return new PlayerPack(this);
    }

    /// <summary>Field number for the "playerName" field.</summary>
    public const int PlayerNameFieldNumber = 1;
    private string playerName_ = "";
    /// <summary>
    ///玩家名稱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HP" field.</summary>
    public const int HPFieldNumber = 2;
    private int hP_;
    /// <summary>
    ///血量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HP {
      get { return hP_; }
      set {
        hP_ = value;
      }
    }

    /// <summary>Field number for the "totalKill" field.</summary>
    public const int TotalKillFieldNumber = 3;
    private int totalKill_;
    /// <summary>
    ///擊殺數
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalKill {
      get { return totalKill_; }
      set {
        totalKill_ = value;
      }
    }

    /// <summary>Field number for the "posPack" field.</summary>
    public const int PosPackFieldNumber = 4;
    private global::SocketGameProtobuf.PosPack posPack_;
    /// <summary>
    ///角色位置包
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtobuf.PosPack PosPack {
      get { return posPack_; }
      set {
        posPack_ = value;
      }
    }

    /// <summary>Field number for the "aniPack" field.</summary>
    public const int AniPackFieldNumber = 5;
    private global::SocketGameProtobuf.AniPack aniPack_;
    /// <summary>
    ///角色動畫包
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtobuf.AniPack AniPack {
      get { return aniPack_; }
      set {
        aniPack_ = value;
      }
    }

    /// <summary>Field number for the "attackPack" field.</summary>
    public const int AttackPackFieldNumber = 6;
    private global::SocketGameProtobuf.AttackPack attackPack_;
    /// <summary>
    ///玩家攻擊包
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtobuf.AttackPack AttackPack {
      get { return attackPack_; }
      set {
        attackPack_ = value;
      }
    }

    /// <summary>Field number for the "killInfoPack" field.</summary>
    public const int KillInfoPackFieldNumber = 7;
    private global::SocketGameProtobuf.KillInfoPack killInfoPack_;
    /// <summary>
    ///擊殺訊息包
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SocketGameProtobuf.KillInfoPack KillInfoPack {
      get { return killInfoPack_; }
      set {
        killInfoPack_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerName != other.PlayerName) return false;
      if (HP != other.HP) return false;
      if (TotalKill != other.TotalKill) return false;
      if (!object.Equals(PosPack, other.PosPack)) return false;
      if (!object.Equals(AniPack, other.AniPack)) return false;
      if (!object.Equals(AttackPack, other.AttackPack)) return false;
      if (!object.Equals(KillInfoPack, other.KillInfoPack)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (HP != 0) hash ^= HP.GetHashCode();
      if (TotalKill != 0) hash ^= TotalKill.GetHashCode();
      if (posPack_ != null) hash ^= PosPack.GetHashCode();
      if (aniPack_ != null) hash ^= AniPack.GetHashCode();
      if (attackPack_ != null) hash ^= AttackPack.GetHashCode();
      if (killInfoPack_ != null) hash ^= KillInfoPack.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerName);
      }
      if (HP != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(HP);
      }
      if (TotalKill != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalKill);
      }
      if (posPack_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PosPack);
      }
      if (aniPack_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(AniPack);
      }
      if (attackPack_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(AttackPack);
      }
      if (killInfoPack_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(KillInfoPack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (HP != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HP);
      }
      if (TotalKill != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalKill);
      }
      if (posPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PosPack);
      }
      if (aniPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AniPack);
      }
      if (attackPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AttackPack);
      }
      if (killInfoPack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KillInfoPack);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerPack other) {
      if (other == null) {
        return;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.HP != 0) {
        HP = other.HP;
      }
      if (other.TotalKill != 0) {
        TotalKill = other.TotalKill;
      }
      if (other.posPack_ != null) {
        if (posPack_ == null) {
          PosPack = new global::SocketGameProtobuf.PosPack();
        }
        PosPack.MergeFrom(other.PosPack);
      }
      if (other.aniPack_ != null) {
        if (aniPack_ == null) {
          AniPack = new global::SocketGameProtobuf.AniPack();
        }
        AniPack.MergeFrom(other.AniPack);
      }
      if (other.attackPack_ != null) {
        if (attackPack_ == null) {
          AttackPack = new global::SocketGameProtobuf.AttackPack();
        }
        AttackPack.MergeFrom(other.AttackPack);
      }
      if (other.killInfoPack_ != null) {
        if (killInfoPack_ == null) {
          KillInfoPack = new global::SocketGameProtobuf.KillInfoPack();
        }
        KillInfoPack.MergeFrom(other.KillInfoPack);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerName = input.ReadString();
            break;
          }
          case 16: {
            HP = input.ReadInt32();
            break;
          }
          case 24: {
            TotalKill = input.ReadInt32();
            break;
          }
          case 34: {
            if (posPack_ == null) {
              PosPack = new global::SocketGameProtobuf.PosPack();
            }
            input.ReadMessage(PosPack);
            break;
          }
          case 42: {
            if (aniPack_ == null) {
              AniPack = new global::SocketGameProtobuf.AniPack();
            }
            input.ReadMessage(AniPack);
            break;
          }
          case 50: {
            if (attackPack_ == null) {
              AttackPack = new global::SocketGameProtobuf.AttackPack();
            }
            input.ReadMessage(AttackPack);
            break;
          }
          case 58: {
            if (killInfoPack_ == null) {
              KillInfoPack = new global::SocketGameProtobuf.KillInfoPack();
            }
            input.ReadMessage(KillInfoPack);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///角色位置包
  /// </summary>
  public sealed partial class PosPack : pb::IMessage<PosPack> {
    private static readonly pb::MessageParser<PosPack> _parser = new pb::MessageParser<PosPack>(() => new PosPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PosPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtobuf.SocketGameProtobufReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PosPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PosPack(PosPack other) : this() {
      posX_ = other.posX_;
      posY_ = other.posY_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PosPack Clone() {
      return new PosPack(this);
    }

    /// <summary>Field number for the "posX" field.</summary>
    public const int PosXFieldNumber = 1;
    private float posX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosX {
      get { return posX_; }
      set {
        posX_ = value;
      }
    }

    /// <summary>Field number for the "posY" field.</summary>
    public const int PosYFieldNumber = 2;
    private float posY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosY {
      get { return posY_; }
      set {
        posY_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PosPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PosPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosX, other.PosX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosY, other.PosY)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PosX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosX);
      if (PosY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosY);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PosX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(PosX);
      }
      if (PosY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PosY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PosX != 0F) {
        size += 1 + 4;
      }
      if (PosY != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PosPack other) {
      if (other == null) {
        return;
      }
      if (other.PosX != 0F) {
        PosX = other.PosX;
      }
      if (other.PosY != 0F) {
        PosY = other.PosY;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            PosX = input.ReadFloat();
            break;
          }
          case 21: {
            PosY = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///角色動畫包
  /// </summary>
  public sealed partial class AniPack : pb::IMessage<AniPack> {
    private static readonly pb::MessageParser<AniPack> _parser = new pb::MessageParser<AniPack>(() => new AniPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AniPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtobuf.SocketGameProtobufReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AniPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AniPack(AniPack other) : this() {
      animationName_ = other.animationName_;
      isActive_ = other.isActive_;
      direction_ = other.direction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AniPack Clone() {
      return new AniPack(this);
    }

    /// <summary>Field number for the "animationName" field.</summary>
    public const int AnimationNameFieldNumber = 1;
    private string animationName_ = "";
    /// <summary>
    ///執行動畫名稱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AnimationName {
      get { return animationName_; }
      set {
        animationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsActive" field.</summary>
    public const int IsActiveFieldNumber = 2;
    private bool isActive_;
    /// <summary>
    ///動畫bool
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsActive {
      get { return isActive_; }
      set {
        isActive_ = value;
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 3;
    private bool direction_;
    /// <summary>
    ///面相方向(true=右)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AniPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AniPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AnimationName != other.AnimationName) return false;
      if (IsActive != other.IsActive) return false;
      if (Direction != other.Direction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AnimationName.Length != 0) hash ^= AnimationName.GetHashCode();
      if (IsActive != false) hash ^= IsActive.GetHashCode();
      if (Direction != false) hash ^= Direction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AnimationName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AnimationName);
      }
      if (IsActive != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsActive);
      }
      if (Direction != false) {
        output.WriteRawTag(24);
        output.WriteBool(Direction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AnimationName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AnimationName);
      }
      if (IsActive != false) {
        size += 1 + 1;
      }
      if (Direction != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AniPack other) {
      if (other == null) {
        return;
      }
      if (other.AnimationName.Length != 0) {
        AnimationName = other.AnimationName;
      }
      if (other.IsActive != false) {
        IsActive = other.IsActive;
      }
      if (other.Direction != false) {
        Direction = other.Direction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AnimationName = input.ReadString();
            break;
          }
          case 16: {
            IsActive = input.ReadBool();
            break;
          }
          case 24: {
            Direction = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///玩家攻擊包
  /// </summary>
  public sealed partial class AttackPack : pb::IMessage<AttackPack> {
    private static readonly pb::MessageParser<AttackPack> _parser = new pb::MessageParser<AttackPack>(() => new AttackPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttackPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtobuf.SocketGameProtobufReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttackPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttackPack(AttackPack other) : this() {
      attackNames_ = other.attackNames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttackPack Clone() {
      return new AttackPack(this);
    }

    /// <summary>Field number for the "attackNames" field.</summary>
    public const int AttackNamesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_attackNames_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> attackNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///受擊玩家列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AttackNames {
      get { return attackNames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttackPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttackPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!attackNames_.Equals(other.attackNames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= attackNames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      attackNames_.WriteTo(output, _repeated_attackNames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += attackNames_.CalculateSize(_repeated_attackNames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttackPack other) {
      if (other == null) {
        return;
      }
      attackNames_.Add(other.attackNames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            attackNames_.AddEntriesFrom(input, _repeated_attackNames_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///擊殺訊息包
  /// </summary>
  public sealed partial class KillInfoPack : pb::IMessage<KillInfoPack> {
    private static readonly pb::MessageParser<KillInfoPack> _parser = new pb::MessageParser<KillInfoPack>(() => new KillInfoPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KillInfoPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SocketGameProtobuf.SocketGameProtobufReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KillInfoPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KillInfoPack(KillInfoPack other) : this() {
      attacker_ = other.attacker_;
      deadList_ = other.deadList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KillInfoPack Clone() {
      return new KillInfoPack(this);
    }

    /// <summary>Field number for the "attacker" field.</summary>
    public const int AttackerFieldNumber = 1;
    private string attacker_ = "";
    /// <summary>
    ///攻擊者
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Attacker {
      get { return attacker_; }
      set {
        attacker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deadList" field.</summary>
    public const int DeadListFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_deadList_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> deadList_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///死亡玩家列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> DeadList {
      get { return deadList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KillInfoPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KillInfoPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Attacker != other.Attacker) return false;
      if(!deadList_.Equals(other.deadList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Attacker.Length != 0) hash ^= Attacker.GetHashCode();
      hash ^= deadList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Attacker.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Attacker);
      }
      deadList_.WriteTo(output, _repeated_deadList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Attacker.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Attacker);
      }
      size += deadList_.CalculateSize(_repeated_deadList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KillInfoPack other) {
      if (other == null) {
        return;
      }
      if (other.Attacker.Length != 0) {
        Attacker = other.Attacker;
      }
      deadList_.Add(other.deadList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Attacker = input.ReadString();
            break;
          }
          case 18: {
            deadList_.AddEntriesFrom(input, _repeated_deadList_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
